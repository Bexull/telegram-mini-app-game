import asyncio
import random
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π)
BOT_TOKEN = "8390538420:AAEK5WxNfdX8jIXJlvvNpy5B1t65a6DYn_Y"

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_games = {}

class GameState:
    def __init__(self):
        self.secret_number = random.randint(1, 100)
        self.attempts = 0
        self.is_playing = True

@dp.message(Command("start"))
async def start_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üéÆ –ò–≥—Ä–∞—Ç—å –≤ —á–∞—Ç–µ", callback_data="play_chat")],
        [InlineKeyboardButton(
            text="üì± –ú–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", 
            web_app={"url": "https://telegram-mini-app-game-4rzbj4e0w-bexulls-projects.vercel.app/"}
        )]
    ])
    
    await message.answer(
        "üéÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É '–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ'!\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –∏–≥—Ä—ã:\n"
        "üí¨ –í —á–∞—Ç–µ - –ø—Ä–æ—Å—Ç–∞—è –∏–≥—Ä–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö\n"
        "üì± –ú–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ - –∫—Ä–∞—Å–∏–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –∞–Ω–∏–º–∞—Ü–∏—è–º–∏",
        reply_markup=keyboard
    )

@dp.message(Command("game"))
async def start_game(message: Message):
    """–ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É"""
    user_id = message.from_user.id
    user_games[user_id] = GameState()
    
    await message.answer(
        f"üéØ –ù–æ–≤–∞—è –∏–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å!\n"
        f"–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100.\n"
        f"–ü–æ–ø—Ä–æ–±—É–π —É–≥–∞–¥–∞—Ç—å! –ù–∞–ø–∏—à–∏ —á–∏—Å–ª–æ."
    )

@dp.message(Command("help"))
async def help_command(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å"""
    await message.answer(
        "üéÆ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/game - –ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É\n"
        "/mini_app - –û—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n"
        "–í –∏–≥—Ä–µ –Ω—É–∂–Ω–æ —É–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100.\n"
        "–Ø –±—É–¥—É –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞—Ç—å '–±–æ–ª—å—à–µ' –∏–ª–∏ '–º–µ–Ω—å—à–µ'!\n\n"
        "üí° –ü–æ–ø—Ä–æ–±—É–π –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ª—É—á—à–µ–≥–æ –æ–ø—ã—Ç–∞!"
    )

@dp.message(Command("mini_app"))
async def mini_app_command(message: Message):
    """–û—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"""
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text="üéÆ –û—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä—É",
            web_app={"url": "https://telegram-mini-app-game-4rzbj4e0w-bexulls-projects.vercel.app/"}
        )]
    ])
    
    await message.answer(
        "üéÆ –û—Ç–∫—Ä–æ–π—Ç–µ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∏–≥—Ä—ã!\n\n"
        "–í –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:\n"
        "‚ú® –ö—Ä–∞—Å–∏–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å\n"
        "üéØ –ü–æ–¥—Å–∫–∞–∑–∫–∏ –∏ –∞–Ω–∏–º–∞—Ü–∏–∏\n"
        "üì± –ù–∞—Ç–∏–≤–Ω—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Telegram",
        reply_markup=keyboard
    )

@dp.message()
async def handle_message(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user_id = message.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–≥—Ä–∞–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if user_id not in user_games or not user_games[user_id].is_playing:
        await message.answer(
            "–°–Ω–∞—á–∞–ª–∞ –Ω–∞—á–Ω–∏ –∏–≥—Ä—É –∫–æ–º–∞–Ω–¥–æ–π /game!"
        )
        return
    
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∏—Å–ª–æ
        guess = int(message.text)
        
        if guess < 1 or guess > 100:
            await message.answer("–ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 100!")
            return
        
        game = user_games[user_id]
        game.attempts += 1
        
        if guess == game.secret_number:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≥–∞–¥–∞–ª!
            await message.answer(
                f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã —É–≥–∞–¥–∞–ª —á–∏—Å–ª–æ {game.secret_number}!\n"
                f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫: {game.attempts}\n\n"
                f"–ò—Å–ø–æ–ª—å–∑—É–π /game –¥–ª—è –Ω–æ–≤–æ–π –∏–≥—Ä—ã!"
            )
            game.is_playing = False
            
        elif guess < game.secret_number:
            await message.answer(f"üìà –ë–æ–ª—å—à–µ! –ü–æ–ø—ã—Ç–∫–∞ #{game.attempts}")
        else:
            await message.answer(f"üìâ –ú–µ–Ω—å—à–µ! –ü–æ–ø—ã—Ç–∫–∞ #{game.attempts}")
            
    except ValueError:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100!")

@dp.callback_query(lambda c: c.data == "play_chat")
async def play_chat_callback(callback_query: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ò–≥—Ä–∞—Ç—å –≤ —á–∞—Ç–µ'"""
    await callback_query.answer()
    user_id = callback_query.from_user.id
    user_games[user_id] = GameState()
    
    await callback_query.message.edit_text(
        f"üéØ –ò–≥—Ä–∞ –≤ —á–∞—Ç–µ –Ω–∞—á–∞–ª–∞—Å—å!\n"
        f"–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100.\n"
        f"–ü–æ–ø—Ä–æ–±—É–π —É–≥–∞–¥–∞—Ç—å! –ù–∞–ø–∏—à–∏ —á–∏—Å–ª–æ."
    )

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
